{"ast":null,"code":"var _jsxFileName = \"/Users/paulgiliberto/Downloads/SPRING2025/CSC2053/git/my_repo/project3-BookRecommender/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, addDoc, doc, getDoc, setDoc } from 'firebase/firestore';\nimport BookCard from '../components/BookCard';\nimport axios from 'axios';\nimport { getBookSummary } from '../services/openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [genre, setGenre] = useState('');\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const savePreference = async () => {\n    await addDoc(collection(db, 'userPreferences'), {\n      name,\n      genre,\n      timestamp: new Date()\n    });\n  };\n  const fetchRecommendations = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`https://openlibrary.org/subjects/${genre}.json?limit=3`);\n      const rawBooks = response.data.works;\n      const recommendBooks = [];\n      for (const book of rawBooks) {\n        const bookTitle = book.title;\n        const safeTitle = encodeURIComponent(bookTitle);\n        const summaryRef = doc(db, 'summaries', safeTitle);\n        console.log('Checking cache for:', safeTitle);\n        const summarySnap = await getDoc(summaryRef);\n        let summary;\n        if (summarySnap.exists()) {\n          console.log('Exists: true');\n          summary = summarySnap.data().text;\n        } else {\n          console.log('Exists: false');\n          console.log(`Calling OpenAI for: ${bookTitle}`);\n          summary = await getBookSummary(bookTitle);\n          if (summary) {\n            await setDoc(summaryRef, {\n              text: summary,\n              timestamp: new Date()\n            });\n          }\n\n          // Delay to avoid rate-limiting\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        recommendBooks.push({\n          title: bookTitle,\n          summary: summary || 'Summary could not be generated.',\n          link: `https://openlibrary.org${book.key}`\n        });\n      }\n      setRecommendedBooks(recommendBooks);\n      console.log(recommendBooks);\n      await savePreference();\n      await addDoc(collection(db, 'searches'), {\n        genre,\n        timestamp: new Date()\n      });\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI-Powered Book Recommender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Enter your name\",\n      style: {\n        marginRight: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: genre,\n      onChange: e => setGenre(e.target.value.toLowerCase()),\n      placeholder: \"Enter your favorite genre (e.g., fantasy)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchRecommendations,\n      children: \"Recommend Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading recommendations...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recommendedBooks.map((book, idx) => /*#__PURE__*/_jsxDEV(BookCard, {\n        book: book\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"yGTB0a5HaTm2M8VtEBO0Ov22Tb0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","db","collection","addDoc","doc","getDoc","setDoc","BookCard","axios","getBookSummary","jsxDEV","_jsxDEV","Home","_s","name","setName","genre","setGenre","recommendedBooks","setRecommendedBooks","loading","setLoading","savePreference","timestamp","Date","fetchRecommendations","response","get","rawBooks","data","works","recommendBooks","book","bookTitle","title","safeTitle","encodeURIComponent","summaryRef","console","log","summarySnap","summary","exists","text","Promise","resolve","setTimeout","push","link","key","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","marginRight","toLowerCase","onClick","map","idx","_c","$RefreshReg$"],"sources":["/Users/paulgiliberto/Downloads/SPRING2025/CSC2053/git/my_repo/project3-BookRecommender/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { db } from '../services/firebase';\nimport { collection, addDoc, doc, getDoc, setDoc } from 'firebase/firestore';\nimport BookCard from '../components/BookCard';\nimport axios from 'axios';\nimport { getBookSummary } from '../services/openai';\n\nconst Home = () => {\n  const [name, setName] = useState('');\n  const [genre, setGenre] = useState('');\n  const [recommendedBooks, setRecommendedBooks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const savePreference = async () => {\n    await addDoc(collection(db, 'userPreferences'), {\n      name,\n      genre,\n      timestamp: new Date(),\n    });\n  };\n\n  const fetchRecommendations = async () => {\n    try {\n      setLoading(true);\n\n      const response = await axios.get(\n        `https://openlibrary.org/subjects/${genre}.json?limit=3`\n      );\n      const rawBooks = response.data.works;\n\n      const recommendBooks = [];\n\n      for (const book of rawBooks) {\n        const bookTitle = book.title;\n        const safeTitle = encodeURIComponent(bookTitle);\n        const summaryRef = doc(db, 'summaries', safeTitle);\n\n        console.log('Checking cache for:', safeTitle);\n        const summarySnap = await getDoc(summaryRef);\n\n        let summary;\n\n        if (summarySnap.exists()) {\n          console.log('Exists: true');\n          summary = summarySnap.data().text;\n        } else {\n          console.log('Exists: false');\n          console.log(`Calling OpenAI for: ${bookTitle}`);\n          summary = await getBookSummary(bookTitle);\n\n          if (summary) {\n            await setDoc(summaryRef, {\n              text: summary,\n              timestamp: new Date(),\n            });\n          }\n\n          // Delay to avoid rate-limiting\n          await new Promise((resolve) => setTimeout(resolve, 1000));\n        }\n\n        recommendBooks.push({\n          title: bookTitle,\n          summary: summary || 'Summary could not be generated.',\n          link: `https://openlibrary.org${book.key}`,\n        });\n      }\n\n      setRecommendedBooks(recommendBooks);\n      console.log(recommendBooks);\n\n      await savePreference();\n      await addDoc(collection(db, 'searches'), {\n        genre,\n        timestamp: new Date(),\n      });\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>AI-Powered Book Recommender</h1>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        placeholder=\"Enter your name\"\n        style={{ marginRight: '10px' }}\n      />\n      <input\n        type=\"text\"\n        value={genre}\n        onChange={(e) => setGenre(e.target.value.toLowerCase())}\n        placeholder=\"Enter your favorite genre (e.g., fantasy)\"\n      />\n      <button onClick={fetchRecommendations}>Recommend Books</button>\n      {loading && <p>Loading recommendations...</p>}\n      <div>\n        {recommendedBooks.map((book, idx) => (\n          <BookCard key={idx} book={book} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}